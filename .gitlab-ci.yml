variables:
  NAME: baal
  GCR: asia.gcr.io
  PROJECT: $GCP_PROJECT_ID
  HASH: $CI_COMMIT_SHORT_SHA

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG

stages:
  - test
  - build
  - deploy

Unit:
  stage: test
  image: golang:1.17
  rules:
    - if: $CI_COMMIT_BRANCH || $CI_COMMIT_TAG
  script:
    - make test

Race:
  stage: test
  image: golang:1.17
  rules:
    - if: $CI_COMMIT_BRANCH || $CI_COMMIT_TAG
  script:
    - make race

Coverage:
  stage: test
  image: golang:1.17
  rules:
    - if: $CI_COMMIT_BRANCH || $CI_COMMIT_TAG
  script:
    - make coverage

Cover:
  stage: test
  image: golang:1.17
  script:
    - make coverhtml
  rules:
    - if: $CI_COMMIT_BRANCH || $CI_COMMIT_TAG

Build:
  stage: build
  image: google/cloud-sdk:latest
  before_script:
    - echo "$GCP_SERVICE_KEY" > gcloud-service-key.json
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
  script:
    - gcloud config set project $GCP_PROJECT_ID
    - gcloud builds submit \
      --region $GCP_REGION \
      --tag $GCR/$PROJECT/$NAME:$HASH
  # rules:
  #   - if: $CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH

Publish:
  stage: deploy
  image: google/cloud-sdk:latest
  before_script:
    - echo "$GCP_SERVICE_KEY" > gcloud-service-key.json
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
  script:
    - gcloud config set project $GCP_PROJECT_ID
    - gcloud run deploy $NAME \
      --image $GCR/$PROJECT/$NAME:$HASH \
      --region $GCP_REGION \
      --platform managed \
      --update-secrets=/.env=baal-env:latest
  # rules:
  #   - if: $CI_DEFAULT_BRANCH == $CI_COMMIT_BRANCH
