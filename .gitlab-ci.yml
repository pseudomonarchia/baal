variables:
  NAME: baal
  GCR: asia.gcr.io
  PROJECT: $GCP_PROJECT_ID
  HASH: $CI_COMMIT_SHORT_SHA
  IMAGE: $GCR/$PROJECT/$NAME

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG

stages:
  - test
  - build
  - deploy

Unit:
  stage: test
  image: golang:1.17
  script:
    - make test

Race:
  stage: test
  image: golang:1.17
  script:
    - make race

Coverage:
  stage: test
  image: golang:1.17
  script:
    - make coverage

Cover:
  stage: test
  image: golang:1.17
  script:
    - make coverhtml

Build:
  stage: build
  image: docker
  only:
    - master
  services:
    - docker:19.03-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build
      --cache-from $CI_REGISTRY_IMAGE:latest
      --tag $CI_REGISTRY_IMAGE:$HASH
      --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$HASH
    - docker push $CI_REGISTRY_IMAGE:latest

Publish:
  stage: deploy
  image: google/cloud-sdk:alpine
  only:
    - master
  services:
    - docker:19.03-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - echo "$GCP_SERVICE_KEY" > gcloud-service-key.json
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud config set project $GCP_PROJECT_ID
    - gcloud auth configure-docker --quiet
  script:
    - docker image pull $CI_REGISTRY_IMAGE:latest || true
    - docker image tag $CI_REGISTRY_IMAGE:latest $IMAGE:$HASH
    - docker image tag $CI_REGISTRY_IMAGE:latest $IMAGE:latest
    - docker image push $IMAGE:$HASH
    - docker image push $IMAGE:latest
    - gcloud run deploy $NAME
      --image $IMAGE:latest
      --region $GCP_REGION
      --platform managed
      --ingress internal-and-cloud-load-balancing
      --max-instances 3
      --labels app=baal
      --set-cloudsql-instances solomon72:$GCP_REGION:baal-sql
      --update-secrets=BAAL_MYSQL_HOST=BAAL_MYSQL_HOST:latest
      --update-secrets=BAAL_MYSQL_PORT=BAAL_MYSQL_PORT:latest
      --update-secrets=BAAL_MYSQL_PASSWORD=BAAL_MYSQL_PASSWORD:latest
      --update-secrets=BAAL_OAUTH_GOOGLE_CLIENT_ID=BAAL_OAUTH_GOOGLE_CLIENT_ID:latest
      --update-secrets=BAAL_OAUTH_GOOGLE_CLIENT_SECRET=BAAL_OAUTH_GOOGLE_CLIENT_SECRET:latest
